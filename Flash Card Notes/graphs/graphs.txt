1. How do we define a graph mathematically?

  - A graph is an ordered pair of a set V of vertices and a set E of edges.

2. What is the difference between directed, undirected, weighted, and unweighted?

  - directed - where a edge has a direction
  - undirected - can go both ways between each vertices
  - weighted - each edge has a cost
  - unweighted - cost of each edge is the same

3. What makes a graph simple? What attributes make it not simple?

  - A graph is simple if it does not have self-loops or multiedges.
  - self-loops and multiedges make a graph not simple

4. What is the maximum number of edges in a directed simple graph? undirected simple graph?

  - directed - N(N-1) where N is the number of vertices
  - undirected - (N(N-1)) / 2 where N is the number of vertices

5. Describe the levels of connectivity a graph can have.

  - Strongly connected - there is a path from any vertex to any other vertex
  - Weakly connected - there is not a path from a vertex to another vertex


6. What are cycles?

  - A path of edges and vertices wherein a vertex is reachable from itself

7. What are some naive ways we can store and traverse graphs?

  - A naive way we can store and traverse graphs is by having a vertex list that holds a reference to every Vertex
  - We would also have a edge list that holds the source and destination of the edge and the weights of each edge.
  - Finding adjacent nodes time complexity is O(E) where E is the number of edges
  - Check if given nodes are connected time complexity is O(E) where E is the number of edges.

8. Explain the different ways that graphs can be represented. What are the pros and cons of various ways of representing graphs?

  - Adjacency matrix - fast run time but takes up too much space
  - Adjacency list - fast run time and takes up little room. If using an array, we need to copy over if we create a new edge.
